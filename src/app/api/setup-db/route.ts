
'use server';

import { supabaseService } from '@/lib/supabase-service';
import { NextResponse } from 'next/server';

export async function POST(request: Request) {
  const { table } = await request.json();

  if (table === 'cycle_count_docs') {
    const query = `
      CREATE TABLE IF NOT EXISTS public.cycle_count_docs (
          id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
          created_at timestamp with time zone NOT NULL DEFAULT now(),
          no_doc text NOT NULL,
          date timestamp with time zone NOT NULL DEFAULT now(),
          counter_name text NOT NULL,
          count_type text NOT NULL,
          items_to_count text NOT NULL,
          status text NOT NULL,
          notes text,
          PRIMARY KEY (id),
          UNIQUE (no_doc)
      );
    `;

    try {
      const { error } = await supabaseService.rpc('run_sql', { sql: query });
      if (error) {
        console.error('Error creating cycle_count_docs table:', error);
        return NextResponse.json({ error: `Failed to create table: ${error.message}` }, { status: 500 });
      }
      return NextResponse.json({ message: 'Table cycle_count_docs created successfully or already exists.' });
    } catch (err: any) {
      return NextResponse.json({ error: `An unexpected error occurred: ${err.message}` }, { status: 500 });
    }
  }

  return NextResponse.json({ error: `Table '${table}' is not a valid table to create.` }, { status: 400 });
}
