
-- Hapus tabel yang ada jika ada untuk memulai dari awal
DROP TABLE IF EXISTS public.users CASCADE;
DROP TABLE IF EXISTS public.menu_permissions CASCADE;
DROP TABLE IF EXISTS public.admin_tasks CASCADE;
DROP TABLE IF EXISTS public.marketplace_stores CASCADE;
DROP TABLE IF EXISTS public.backlog_items CASCADE;
DROP TABLE IF EXISTS public.daily_performance CASCADE;
DROP TABLE IF EXISTS public.return_documents CASCADE;
DROP TABLE IF EXISTS public.log_activity CASCADE;


-- Membuat tabel pengguna
CREATE TABLE public.users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL,
    email VARCHAR NOT NULL UNIQUE,
    role VARCHAR NOT NULL,
    status VARCHAR NOT NULL,
    created_at TIMESTAMPTZ DEFAULT NOW()
);

-- Membuat tabel izin menu
CREATE TABLE public.menu_permissions (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT REFERENCES public.users(id) ON DELETE CASCADE,
    menu_href VARCHAR NOT NULL,
    is_accessible BOOLEAN NOT NULL,
    UNIQUE(user_id, menu_href)
);

-- Membuat tabel tugas admin
CREATE TABLE public.admin_tasks (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL,
    job VARCHAR NOT NULL,
    shift VARCHAR NOT NULL,
    status VARCHAR NOT NULL,
    date TIMESTAMPTZ DEFAULT NOW()
);

-- Membuat tabel toko marketplace
CREATE TABLE public.marketplace_stores (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    marketplace_name VARCHAR NOT NULL,
    store_name VARCHAR NOT NULL,
    platform VARCHAR,
    created_at TIMESTAMPTZ DEFAULT NOW()
);

-- Membuat tabel item backlog
CREATE TABLE public.backlog_items (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    store_name VARCHAR NOT NULL,
    payment_accepted INT NOT NULL,
    marketplace VARCHAR NOT NULL,
    created_at TIMESTAMPTZ DEFAULT NOW()
);

-- Membuat tabel performa harian
CREATE TABLE public.daily_performance (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    date DATE NOT NULL,
    month VARCHAR NOT NULL,
    name VARCHAR NOT NULL,
    task_daily INT NOT NULL,
    total_items INT NOT NULL,
    job_desc VARCHAR NOT NULL,
    shift VARCHAR NOT NULL,
    target INT NOT NULL,
    target_item INT NOT NULL,
    task_performance INT NOT NULL,
    items_performance INT NOT NULL,
    result VARCHAR NOT NULL
);

-- Membuat tabel dokumen pengembalian
CREATE TABLE public.return_documents (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    noDocument VARCHAR NOT NULL,
    date TIMESTAMPTZ DEFAULT NOW(),
    qty INT NOT NULL,
    status VARCHAR NOT NULL,
    sku VARCHAR NOT NULL,
    barcode VARCHAR NOT NULL,
    brand VARCHAR NOT NULL,
    reason TEXT,
    receivedBy VARCHAR NOT NULL
);

-- Membuat tabel log aktivitas
CREATE TABLE public.log_activity (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_name VARCHAR NOT NULL,
    user_email VARCHAR NOT NULL,
    action VARCHAR NOT NULL,
    details TEXT,
    created_at TIMESTAMPTZ DEFAULT NOW()
);


-- Kebijakan Keamanan (RLS)

-- Aktifkan RLS untuk semua tabel
ALTER TABLE public.users ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.menu_permissions ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.admin_tasks ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.marketplace_stores ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.backlog_items ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.daily_performance ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.return_documents ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.log_activity ENABLE ROW LEVEL SECURITY;


-- Hapus kebijakan yang ada sebelum membuat yang baru
DROP POLICY IF EXISTS "Allow all access for authenticated users" ON public.users;
DROP POLICY IF EXISTS "Allow all access" ON public.menu_permissions;
DROP POLICY IF EXISTS "Allow all access" ON public.admin_tasks;
DROP POLICY IF EXISTS "Allow all access" ON public.marketplace_stores;
DROP POLICY IF EXISTS "Allow all access" ON public.backlog_items;
DROP POLICY IF EXISTS "Allow all access" ON public.daily_performance;
DROP POLICY IF EXISTS "Allow all access" ON public.return_documents;
DROP POLICY IF EXISTS "Allow read access for all users" ON public.log_activity;

-- Kebijakan untuk tabel `users` (Sederhana, akses penuh untuk service_role)
CREATE POLICY "Allow all access for authenticated users" ON public.users
FOR ALL
TO authenticated
USING (true);

-- Kebijakan untuk tabel lain (Akses penuh untuk service_role, yang digunakan di backend)
CREATE POLICY "Allow all access" ON public.menu_permissions FOR ALL USING (true);
CREATE POLICY "Allow all access" ON public.admin_tasks FOR ALL USING (true);
CREATE POLICY "Allow all access" ON public.marketplace_stores FOR ALL USING (true);
CREATE POLICY "Allow all access" ON public.backlog_items FOR ALL USING (true);
CREATE POLICY "Allow all access" ON public.daily_performance FOR ALL USING (true);
CREATE POLICY "Allow all access" ON public.return_documents FOR ALL USING (true);
CREATE POLICY "Allow read access for all users" ON public.log_activity FOR SELECT USING (true);


-- Masukkan data awal jika diperlukan
-- Contoh data untuk tabel users
INSERT INTO public.users (name, email, role, status) VALUES
('Arlan Saputra', 'arlan.saputra@marketplace.com', 'Super Admin', 'Leader'),
('Rudi Setiawan', 'rudi.setiawan@marketplace.com', 'Admin', 'Reguler'),
('Nova Aurelia', 'nova.aurelia@marketplace.com', 'Admin', 'Reguler'),
('Nurul Tanzilla', 'nurul.tanzilla@marketplace.com', 'Event Staff', 'Event'),
('Regina Rifana', 'regina.rifana@marketplace.com', 'Captain', 'Leader');
